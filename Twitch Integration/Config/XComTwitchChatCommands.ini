; ------------------------------------------------------------------------
; This file contains configuration related to all of the chat commands which
; viewers can use. Individual commands can be enabled or disabled, and you can
; change how they're used (ex: you can change 'xsay' to 'xtalk'), which may be
; useful if a command conflicts with an existing chat command from Moobot or similar.
;
; Individual commands may expose additional configuration in this file as well.
; ------------------------------------------------------------------------


[TwitchIntegration.TwitchStateManager]

; This is a list of commands which are enabled for chatters to use. See the individual
; commands below for their documentation and how to invoke them.
; +EnabledCommands=TwitchCommandHandler_ExecuteAction
; +EnabledCommands=TwitchCommandHandler_Vote
+EnabledCommands=TwitchCommandHandler_XSay



[TwitchIntegration.UIChatLog]
TimeToShowOnMessageReceived=0.0f ; How long to show the chat log after receiving a message, before collapsing it to the side automatically. If <= 0,
                                 ; the chat log will not collapse automatically. Regardless of this setting, you can always click a button to expand
                                 ; or collapse the chat log manually.



; ------------------------------------------------------------------------
; Command:     Vote
; Usable by:   all viewers whenever a poll is active
; Syntax:      vote <optionNumber>
;
; Casts a vote in a poll. If you've disabled polls in XComTwitchEvents.ini, this command will never do anything.
; Note that at this time, viewers cannot change their vote once cast.
;
; NOTE: POLLS ARE NOT CURRENTLY IMPLEMENTED. This command has no effect.
; ------------------------------------------------------------------------
[TwitchIntegration.TwitchCommandHandler_Vote]
+CommandAliases=vote ; Don't change this, it's hardcoded on the UI!
bEnableInTactical=true


; ------------------------------------------------------------------------
; Command:     XSay
; Usable by:   viewers with units in the current tactical mission
; Syntax:      xsay <message>
;
; Sends a chat message to show in-game. If the viewer sending the message does not own a unit in the current
; mission, their message is ignored.
;
; This command supports a bunch of configuration related to how the message is displayed and when messages
; are allowed.
; ------------------------------------------------------------------------

[TwitchIntegration.TwitchCommandHandler_XSay]
+CommandAliases=xsay
+CommandAliases=say
bEnableInStrategy=true
bEnableInTactical=true

bRequireUnitInLOS=false ; If true, chat messages from enemies will be ignored if the enemy is not currently in LOS of XCOM. Even if this is false, messages will
                        ; not pan the camera to the unit if the unit is not in LOS, to avoid spoiling enemy positions. Additionally, if using the chat log, the
                        ; message will only show the chatter's name and not what enemy type their unit is if the unit is not in LOS.

bShowToast=false        ; If true, a notification toast will pop up on the right side of the screen (similar to soldier promotion messages) with the chat message.
                        ; Messages will be truncated to 45 characters to fit within the toast.

bShowFlyover=false      ; If true, when chat messages are received, a popup will occur over the unit which said it (similar to the popup when a unit is revealed
                        ; or disoriented). The camera may pan to the unit, depending on the value of LookAtDuration below. Panning removes control of the camera
                        ; from the player while it's happening, so strongly consider turning it off if your chat is fairly active.
                        ; Messages will be truncated to 45 characters to fit within the flyover.

LookAtDuration=0        ; How long, in seconds, to look at a character when chat is submitted. If negative, the camera will not move when !xsay is used;
                        ; if positive, the camera will move to the character and stay there for the specified duration; and if 0, the camera will remain
                        ; on the character for a length of time automatically determined based on the length of the chat message.
                        ; Characters not currently visible to your squad will never be panned to regardless of this value.
                        ; No effect if bShowFlyover is false.

; ViewerOverrides: lets you configure special behavior for specific viewers. This ranges from giving them enhanced privileges
; to use xsay even if they aren't raffled, to overriding their portrait or their speech sounds. For images and sounds, you need
; to know their UPK path; the easiest way is by having the XCOM 2 SDK installed, but a few useful ones are listed here for reference.
; Note that if the viewer owns a unit, normally that unit's image/sounds would be used. If you set them here, the override values are
; used instead. If you give a viewer an override but leave their image and/or sounds empty, only the populated fields have an effect.

; EXAMPLE-IMAGE
;     EXAMPLE-SOUND
; UILibrary_Common.Head_Central
;     DLC_90_SoundSpeechTacticalCentral.Play_DLC3_T_CEN_Bridge_Extension_2_Cue
;     DLC_90_SoundSpeechTacticalCentral.Play_DLC3_T_CEN_Bridge_Extended_4_Cue
;     DLC_90_SoundSpeechTacticalCentral.Play_DLC3_T_CEN_Hack_The_Bridge_ALT_2_Cue
; UILibrary_Common.Head_Council
; UILibrary_Common.Head_Firebrand
;     XPACK_SoundSpeechTacticalFirebrand.Play_X2_XP_FIRE_T_On_Deck_Cue
;     SoundSpeechTacticalFirebrand.FB04_en_us_InDropPosition_03_Cue
; UILibrary_Common.Head_Propaganda
; UILibrary_Common.Head_Shen
; UILibrary_Common.Head_Speaker
; UILibrary_Common.Head_Tygan

+ViewerOverrides=(ViewerLogin="exampleviewer.notreal.mcfakename", \\
                  CommLinkImageOverride="UILibrary_Common.Head_Firebrand", \\
                  bCanAlwaysSpeakOnStrat=true, \\
                  bCanAlwaysSpeakOnTac=true, \\
                  Sounds[0]="XPACK_SoundSpeechTacticalFirebrand.Play_X2_XP_FIRE_T_On_Deck_Cue", \\
                  Sounds[1]="SoundSpeechTacticalFirebrand.FB04_en_us_InDropPosition_03_Cue" \\
                 )

; ------------------------------------------------------------------------
; Command:     Special
; Usable by:   Special
; Syntax:      Special
;
; TBD
; ------------------------------------------------------------------------

[TwitchIntegration.TwitchCommandHandler_ExecuteAction]
;bEnableInTactical=true
;
;+ActionTuples=( \\
;    Alias=ubercharge, \\
;    ActionName=TwitchAction_Ubercharge, \\
;    bMustBeSub=false, \\
;    CostInBits=0)